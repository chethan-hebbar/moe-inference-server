# --- Stage 1: Build the application using a Maven image ---
# This stage is used to create the .jar file inside a container,
# ensuring a consistent build environment.
FROM maven:3.9.11-amazoncorretto-24 AS build

# Set the working directory inside the image
WORKDIR /app

# Copy the Maven project files
COPY pom.xml .
COPY src ./src

# Run the Maven package command to build the jar
# -DskipTests skips running unit tests during this build
RUN mvn clean package -DskipTests

# --- Stage 2: Create the final, lightweight runtime image ---
# We use a slim OpenJDK image that doesn't contain all the Maven build tools.
FROM openjdk:24-jdk-slim

# Set the working directory
WORKDIR /app

# Copy the executable .jar file from the 'build' stage
# The name must match the one generated by Maven in your 'target' folder.
# Check your 'target' directory to confirm this name.
COPY --from=build /app/target/inference-api-gateway-0.0.1.jar app.jar

# Expose port 8080 to the outside world. This is the port Spring Boot runs on by default.
EXPOSE 8080

# The command to run when the container starts.
ENTRYPOINT ["java", "-jar", "app.jar"]